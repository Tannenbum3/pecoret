from rest_framework.test import APITestCase
from pecoret.core.test import PeCoReTTestCaseMixin
from backend.models import VulnerabilityCategory


class VulnerabilityCategoryListViewTestCase(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.url = self.get_url("backend:vulnerability-category-list")

    def test_status_allowed(self):
        users = [
            self.pentester1, self.pentester2, self.management1, self.management2, self.read_only1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.get, 200)

    def test_status_forbidden(self):
        users = [
            self.user1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.get, 403)


class VulnerabilityCreateViewTestCase(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.url = self.get_url("backend:vulnerability-category-list")

    def test_forbidden(self):
        users = [
            self.management2, self.management1, self.pentester1, self.pentester2,
            self.read_only1, self.user1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.post, 403, data={})


class VulnerabilityUpdateViewTestCase(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.category = self.create_instance(VulnerabilityCategory)
        self.url = self.get_url("backend:vulnerability-category-detail", pk=self.category.pk)

    def test_forbidden(self):
        users = [
            self.management2, self.management1, self.pentester2, self.pentester1,
            self.read_only1, self.user1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.patch, 403, data={})


class VulnerabilityDeleteViewTestCase(APITestCase, PeCoReTTestCaseMixin):
    def setUp(self) -> None:
        self.init_mixin()
        self.category = self.create_instance(VulnerabilityCategory)
        self.url = self.get_url("backend:vulnerability-category-detail", pk=self.category.pk)

    def test_forbidden(self):
        users = [
            self.management2, self.management1, self.pentester2, self.pentester1, self.read_only1, self.user1
        ]
        for user in users:
            self.client.force_login(user)
            self.basic_status_code_check(self.url, self.client.delete, 403, data={})
